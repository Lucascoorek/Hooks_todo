{"ast":null,"code":"import _slicedToArray from \"/Users/Luki/Documents/Documents/IT.nosync/Modern React Bootcamp/todos/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Luki/Documents/Documents/IT.nosync/Modern React Bootcamp/todos/src/Todo.js\";\nimport React from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodo from \"./EditTodo\";\nexport default function Todo(_ref) {\n  var id = _ref.id,\n      task = _ref.task,\n      completed = _ref.completed,\n      editTodo = _ref.editTodo,\n      removeTodo = _ref.removeTodo,\n      toggleTodo = _ref.toggleTodo;\n\n  var _useToggleState = useToggleState(false),\n      _useToggleState2 = _slicedToArray(_useToggleState, 2),\n      editing = _useToggleState2[0],\n      setEditing = _useToggleState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, editing ? React.createElement(EditTodo, {\n    editTodo: editTodo,\n    id: id,\n    task: task,\n    setEditing: setEditing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    style: completed ? {\n      textDecoration: \"line-through\"\n    } : null,\n    onClick: function onClick() {\n      return toggleTodo(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, task), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return removeTodo(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(\"button\", {\n    onClick: setEditing,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Edit\")));\n}","map":{"version":3,"sources":["/Users/Luki/Documents/Documents/IT.nosync/Modern React Bootcamp/todos/src/Todo.js"],"names":["React","useToggleState","EditTodo","Todo","id","task","completed","editTodo","removeTodo","toggleTodo","editing","setEditing","textDecoration"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,IAAT,OAOZ;AAAA,MANDC,EAMC,QANDA,EAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADDC,UACC,QADDA,UACC;;AAAA,wBAC6BR,cAAc,CAAC,KAAD,CAD3C;AAAA;AAAA,MACMS,OADN;AAAA,MACeC,UADf;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,GACN,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEH,QADZ;AAEE,IAAA,EAAE,EAAEH,EAFN;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,UAAU,EAAEM,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAQN,0CACE;AACE,IAAA,KAAK,EAAEL,SAAS,GAAG;AAAEM,MAAAA,cAAc,EAAE;AAAlB,KAAH,GAAwC,IAD1D;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMH,UAAU,CAACL,EAAD,CAAhB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,IAJH,CADF,EAOE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMG,UAAU,CAACJ,EAAD,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAQE;AAAQ,IAAA,OAAO,EAAEO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CATJ,CADF;AAuBD","sourcesContent":["import React from \"react\";\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodo from \"./EditTodo\";\n\nexport default function Todo({\n  id,\n  task,\n  completed,\n  editTodo,\n  removeTodo,\n  toggleTodo\n}) {\n  const [editing, setEditing] = useToggleState(false);\n  return (\n    <div>\n      {editing ? (\n        <EditTodo\n          editTodo={editTodo}\n          id={id}\n          task={task}\n          setEditing={setEditing}\n        />\n      ) : (\n        <>\n          <p\n            style={completed ? { textDecoration: \"line-through\" } : null}\n            onClick={() => toggleTodo(id)}\n          >\n            {task}\n          </p>\n          <button onClick={() => removeTodo(id)}>Delete</button>\n          <button onClick={setEditing}>Edit</button>\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}